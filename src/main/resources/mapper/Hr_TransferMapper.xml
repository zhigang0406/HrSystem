<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scorponok.base.mapper.Hr_TransferMapper">
  <resultMap id="BaseResultMap" type="com.scorponok.base.entity.Hr_Transfer">
    <id column="transfer_id" jdbcType="BIGINT" property="transferId" />
    <result column="transfer_name" jdbcType="VARCHAR" property="transferName" />
    <result column="transfer_Fdepartment" jdbcType="BIGINT" property="transferFdepartment" />
    <result column="transfer_Fpost" jdbcType="BIGINT" property="transferFpost" />
    <result column="transfer_Fshop" jdbcType="VARCHAR" property="transferFshop" />
    <result column="transfer_Ldepartment" jdbcType="BIGINT" property="transferLdepartment" />
    <result column="transfer_Lpost" jdbcType="BIGINT" property="transferLpost" />
    <result column="transfer_Lshop" jdbcType="VARCHAR" property="transferLshop" />
    <result column="transfer_reason" jdbcType="VARCHAR" property="transferReason" />
    <result column="transfer_operator" jdbcType="VARCHAR" property="transferOperator" />
    <result column="operator_department" jdbcType="BIGINT" property="operatorDepartment" />
    <result column="operator_post" jdbcType="BIGINT" property="operatorPost" />
    <result column="transfer_time" jdbcType="DATE" property="transferTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transfer_id, transfer_name, transfer_Fdepartment, transfer_Fpost, transfer_Fshop, 
    transfer_Ldepartment, transfer_Lpost, transfer_Lshop, transfer_reason, transfer_operator, 
    operator_department, operator_post, transfer_time
  </sql>
  <select id="selectByExample" parameterType="com.scorponok.base.entity.Hr_TransferExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hr_transfer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hr_transfer
    where transfer_id = #{transferId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hr_transfer
    where transfer_id = #{transferId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.scorponok.base.entity.Hr_Transfer">
    insert into hr_transfer (transfer_id, transfer_name, transfer_Fdepartment, 
      transfer_Fpost, transfer_Fshop, transfer_Ldepartment, 
      transfer_Lpost, transfer_Lshop, transfer_reason, 
      transfer_operator, operator_department, operator_post, 
      transfer_time)
    values (#{transferId,jdbcType=BIGINT}, #{transferName,jdbcType=VARCHAR}, #{transferFdepartment,jdbcType=BIGINT}, 
      #{transferFpost,jdbcType=BIGINT}, #{transferFshop,jdbcType=VARCHAR}, #{transferLdepartment,jdbcType=BIGINT}, 
      #{transferLpost,jdbcType=BIGINT}, #{transferLshop,jdbcType=VARCHAR}, #{transferReason,jdbcType=VARCHAR}, 
      #{transferOperator,jdbcType=VARCHAR}, #{operatorDepartment,jdbcType=BIGINT}, #{operatorPost,jdbcType=BIGINT}, 
      #{transferTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.scorponok.base.entity.Hr_Transfer">
    insert into hr_transfer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transferId != null">
        transfer_id,
      </if>
      <if test="transferName != null">
        transfer_name,
      </if>
      <if test="transferFdepartment != null">
        transfer_Fdepartment,
      </if>
      <if test="transferFpost != null">
        transfer_Fpost,
      </if>
      <if test="transferFshop != null">
        transfer_Fshop,
      </if>
      <if test="transferLdepartment != null">
        transfer_Ldepartment,
      </if>
      <if test="transferLpost != null">
        transfer_Lpost,
      </if>
      <if test="transferLshop != null">
        transfer_Lshop,
      </if>
      <if test="transferReason != null">
        transfer_reason,
      </if>
      <if test="transferOperator != null">
        transfer_operator,
      </if>
      <if test="operatorDepartment != null">
        operator_department,
      </if>
      <if test="operatorPost != null">
        operator_post,
      </if>
      <if test="transferTime != null">
        transfer_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transferId != null">
        #{transferId,jdbcType=BIGINT},
      </if>
      <if test="transferName != null">
        #{transferName,jdbcType=VARCHAR},
      </if>
      <if test="transferFdepartment != null">
        #{transferFdepartment,jdbcType=BIGINT},
      </if>
      <if test="transferFpost != null">
        #{transferFpost,jdbcType=BIGINT},
      </if>
      <if test="transferFshop != null">
        #{transferFshop,jdbcType=VARCHAR},
      </if>
      <if test="transferLdepartment != null">
        #{transferLdepartment,jdbcType=BIGINT},
      </if>
      <if test="transferLpost != null">
        #{transferLpost,jdbcType=BIGINT},
      </if>
      <if test="transferLshop != null">
        #{transferLshop,jdbcType=VARCHAR},
      </if>
      <if test="transferReason != null">
        #{transferReason,jdbcType=VARCHAR},
      </if>
      <if test="transferOperator != null">
        #{transferOperator,jdbcType=VARCHAR},
      </if>
      <if test="operatorDepartment != null">
        #{operatorDepartment,jdbcType=BIGINT},
      </if>
      <if test="operatorPost != null">
        #{operatorPost,jdbcType=BIGINT},
      </if>
      <if test="transferTime != null">
        #{transferTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scorponok.base.entity.Hr_TransferExample" resultType="java.lang.Long">
    select count(*) from hr_transfer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hr_transfer
    <set>
      <if test="record.transferId != null">
        transfer_id = #{record.transferId,jdbcType=BIGINT},
      </if>
      <if test="record.transferName != null">
        transfer_name = #{record.transferName,jdbcType=VARCHAR},
      </if>
      <if test="record.transferFdepartment != null">
        transfer_Fdepartment = #{record.transferFdepartment,jdbcType=BIGINT},
      </if>
      <if test="record.transferFpost != null">
        transfer_Fpost = #{record.transferFpost,jdbcType=BIGINT},
      </if>
      <if test="record.transferFshop != null">
        transfer_Fshop = #{record.transferFshop,jdbcType=VARCHAR},
      </if>
      <if test="record.transferLdepartment != null">
        transfer_Ldepartment = #{record.transferLdepartment,jdbcType=BIGINT},
      </if>
      <if test="record.transferLpost != null">
        transfer_Lpost = #{record.transferLpost,jdbcType=BIGINT},
      </if>
      <if test="record.transferLshop != null">
        transfer_Lshop = #{record.transferLshop,jdbcType=VARCHAR},
      </if>
      <if test="record.transferReason != null">
        transfer_reason = #{record.transferReason,jdbcType=VARCHAR},
      </if>
      <if test="record.transferOperator != null">
        transfer_operator = #{record.transferOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorDepartment != null">
        operator_department = #{record.operatorDepartment,jdbcType=BIGINT},
      </if>
      <if test="record.operatorPost != null">
        operator_post = #{record.operatorPost,jdbcType=BIGINT},
      </if>
      <if test="record.transferTime != null">
        transfer_time = #{record.transferTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hr_transfer
    set transfer_id = #{record.transferId,jdbcType=BIGINT},
      transfer_name = #{record.transferName,jdbcType=VARCHAR},
      transfer_Fdepartment = #{record.transferFdepartment,jdbcType=BIGINT},
      transfer_Fpost = #{record.transferFpost,jdbcType=BIGINT},
      transfer_Fshop = #{record.transferFshop,jdbcType=VARCHAR},
      transfer_Ldepartment = #{record.transferLdepartment,jdbcType=BIGINT},
      transfer_Lpost = #{record.transferLpost,jdbcType=BIGINT},
      transfer_Lshop = #{record.transferLshop,jdbcType=VARCHAR},
      transfer_reason = #{record.transferReason,jdbcType=VARCHAR},
      transfer_operator = #{record.transferOperator,jdbcType=VARCHAR},
      operator_department = #{record.operatorDepartment,jdbcType=BIGINT},
      operator_post = #{record.operatorPost,jdbcType=BIGINT},
      transfer_time = #{record.transferTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scorponok.base.entity.Hr_Transfer">
    update hr_transfer
    <set>
      <if test="transferName != null">
        transfer_name = #{transferName,jdbcType=VARCHAR},
      </if>
      <if test="transferFdepartment != null">
        transfer_Fdepartment = #{transferFdepartment,jdbcType=BIGINT},
      </if>
      <if test="transferFpost != null">
        transfer_Fpost = #{transferFpost,jdbcType=BIGINT},
      </if>
      <if test="transferFshop != null">
        transfer_Fshop = #{transferFshop,jdbcType=VARCHAR},
      </if>
      <if test="transferLdepartment != null">
        transfer_Ldepartment = #{transferLdepartment,jdbcType=BIGINT},
      </if>
      <if test="transferLpost != null">
        transfer_Lpost = #{transferLpost,jdbcType=BIGINT},
      </if>
      <if test="transferLshop != null">
        transfer_Lshop = #{transferLshop,jdbcType=VARCHAR},
      </if>
      <if test="transferReason != null">
        transfer_reason = #{transferReason,jdbcType=VARCHAR},
      </if>
      <if test="transferOperator != null">
        transfer_operator = #{transferOperator,jdbcType=VARCHAR},
      </if>
      <if test="operatorDepartment != null">
        operator_department = #{operatorDepartment,jdbcType=BIGINT},
      </if>
      <if test="operatorPost != null">
        operator_post = #{operatorPost,jdbcType=BIGINT},
      </if>
      <if test="transferTime != null">
        transfer_time = #{transferTime,jdbcType=DATE},
      </if>
    </set>
    where transfer_id = #{transferId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scorponok.base.entity.Hr_Transfer">
    update hr_transfer
    set transfer_name = #{transferName,jdbcType=VARCHAR},
      transfer_Fdepartment = #{transferFdepartment,jdbcType=BIGINT},
      transfer_Fpost = #{transferFpost,jdbcType=BIGINT},
      transfer_Fshop = #{transferFshop,jdbcType=VARCHAR},
      transfer_Ldepartment = #{transferLdepartment,jdbcType=BIGINT},
      transfer_Lpost = #{transferLpost,jdbcType=BIGINT},
      transfer_Lshop = #{transferLshop,jdbcType=VARCHAR},
      transfer_reason = #{transferReason,jdbcType=VARCHAR},
      transfer_operator = #{transferOperator,jdbcType=VARCHAR},
      operator_department = #{operatorDepartment,jdbcType=BIGINT},
      operator_post = #{operatorPost,jdbcType=BIGINT},
      transfer_time = #{transferTime,jdbcType=DATE}
    where transfer_id = #{transferId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.scorponok.base.entity.Hr_TransferExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hr_transfer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>